---
# Add a fast check to speed reconfiguration
- set_fact: CLUES_PATH=/usr/local/bin/clues
  when: ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int > 7)

- set_fact: CLUES_PATH=/usr/bin/clues
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

- stat: path={{CLUES_PATH}}
  register: clues_installed

- name: Link python 3 or 2 in case is needed
  shell: ls /usr/bin/python || { ls /usr/bin/python3 && ln -s /usr/bin/python3 /usr/bin/python; } || { ls /usr/bin/python2 && ln -s /usr/bin/python2 /usr/bin/python; }
  changed_when: false

- block:
  - name: Include "{{ansible_os_family}}" CLUES2 requirements
    include_tasks: "{{ansible_os_family}}.yml"

  - set_fact: pip_exec=pip2
    when: ansible_python_version is version('3', '<')

  - set_fact: pip_exec=pip3
    when: ansible_python_version is version('3', '>=')

  - name: Set extra_args var
    set_fact:
      extra_args: ""

  - name: Set extra_args var in py3.11
    set_fact:
      extra_args: --break-system-packages
    when: ansible_python_version is version('3.11', '>=')

  - name: Install CLUES2 deps
    pip:
      name: 
        - ply
        - radl
        - jaraco.functools==2.0
        - more-itertools==5.0
        - web.py==0.51
        - requests==2.15.1
        - PyYAML==5.4.1
        - distro
        - git+https://github.com/grycap/cpyutils.git@{{ cpyutils_git_branch }}
      executable: "{{pip_exec}}"
    when: ansible_python_version is version('3', '<')

  - name: Install CLUES2 deps
    pip:
      name: 
        - ply
        - radl
        - web.py
        - requests
        - PyYAML
        - distro
        - git+https://github.com/grycap/cpyutils.git@{{ cpyutils_git_branch }}
      executable: "{{pip_exec}}"
      extra_args: "{{ extra_args }}"
    when: ansible_python_version is version('3', '>=')

  - name: Install CLUES2 conf files
    pip:
      name: git+https://github.com/grycap/clues.git@{{ clues_git_branch }}
      executable: "{{pip_exec}}"
      extra_args: --no-binary clues

  - name: Install CLUES2
    pip:
      name: git+https://github.com/grycap/clues.git@{{ clues_git_branch }}
      executable: "{{pip_exec}}"

  - name: Stop clues server
    command: systemctl stop cluesd
    ignore_errors: yes

  # CLUES2 Config file
  - name: Set CLUES2 folder rights
    file: path=/etc/clues2 state=directory mode=755

  - name: Create CLUES2 config file
    copy: src=/etc/clues2/clues2.cfg-full-example dest=/etc/clues2/clues2.cfg force=no remote_src=yes
    notify: restart cluesd

  when: not clues_installed.stat.exists


- name: Set main CLUES2 config file values
  ini_file: dest=/etc/clues2/clues2.cfg section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { section: 'general', option: 'POWERMANAGER_CLASS', value: '{{clues_powermanager_class}}' }
    - { section: 'general', option: 'CLUES_SECRET_TOKEN', value: '{{clues_secret_token}}' }
    - { section: 'client', option: 'CLUES_SECRET_TOKEN', value: '{{clues_secret_token}}' }
    - { section: 'scheduling', option: 'MAX_BOOTING_NODES', value: '{{ max_number_of_nodes }}' }
  notify: restart cluesd

- name: Set CLUES2 config file values
  ini_file: dest=/etc/clues2/clues2.cfg section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items: "{{ clues_config_options }}"
  notify: restart cluesd

# CLUES2 IM plugin Config file
- name: Create EC3 directory
  file: path=/usr/local/ec3 state=directory mode=755

- name: Create auth file from auth
  copy:
    dest: /usr/local/ec3/auth.dat
    content: "{{auth}}"
    force: no
  when: auth is defined and auth != ""

- name: Create auth file from auth token
  get_url:
    url: "{{ clues_auth_token | from_json | json_query('url') }}"
    dest: /usr/local/ec3/auth.dat
    force: no
    headers:
      Authorization: "Bearer {{ clues_auth_token | from_json | json_query('token') }}"
  when: clues_auth_token is defined and clues_auth_token != ""

- name: Copy 'extract_proxy' file
  copy: dest=/tmp/extract_proxy.py src=extract_proxy.py mode=0755 force=no

- name: Extract proxy information
  command: /tmp/extract_proxy.py creates=/usr/local/ec3/proxy.pem
  ignore_errors: yes

- name: Create IM plugin configuration file for CLUES2
  copy: src=/etc/clues2/conf.d/plugin-im.cfg-example dest=/etc/clues2/conf.d/plugin-im.cfg force=no remote_src=yes
  notify: restart cluesd

- name: Set IM plugin configuration file values
  ini_file: dest=/etc/clues2/conf.d/plugin-im.cfg section="IM VIRTUAL CLUSTER" option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { option: 'IM_VIRTUAL_CLUSTER_AUTH_DATA_FILE', value: '/usr/local/ec3/auth.dat' }
    - { option: 'IM_VIRTUAL_CLUSTER_DROP_FAILING_VMS', value: '600' }
  notify: restart cluesd

# CLUES IM configuration
- name: Set EC3 folder rights
  file: path=/usr/local/ec3 state=directory mode=755

# CLUES LRMS configuration
- name: Configuring the elastic cluster to use "{{clues_queue_system}}" LRMS
  include_tasks: "{{clues_queue_system}}.yml"

- name: Start CLUES service
  service: name=cluesd state=started enabled=yes

# This fixes a problem with the CLUES service in Centos 7
#- name: Kill and restart clues service (Centos 7 only)
#  shell: pgrep -f cluesserver && pgrep -f cluesserver | xargs kill ; service cluesd start
#  when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7
#  ignore_errors: yes
#  changed_when: false
